@model Agilisium.TalentManager.WebUI.Models.RecruitmentRequestViewModel

@{
    ViewBag.Title = "Recruitment Requests Tracker";
    //Layout = "~/Views/Shared/_RecruitmentLayout.cshtml";
}

<script>
    $(document).ready(function () {
        if ($("#FilterType").text() != "Filter By") {
            loadFilterDropDown();
        }
    });

    $(function () {
        $("#FilterType").change(function (evt) {
            loadFilterDropDown();
        });
    });

    loadFilterDropDown = function () {
        if ($("#FilterType").text() != "Filter By") {
            $.ajax({
                url: rootUrl + "Repos/LoadFilterValueListItems",
                type: 'POST',
                data: { filterType: $("#FilterType").val() },
                success: function (data) {
                    $('#FilterValue').empty();
                    $.each(data, function () {
                        $("#FilterValue").append($("<option></option>").val(parseInt(this['Value'])).text(this['Text']));
                    });
                },
                error: function (xhr) { alert('Error while loading the Drop Down list'); }
            });
        }
    }
</script>

<div class="panel panel-default">
    <div class="panel-heading" style="text-align:center">
        <h3><b>Recruitment Requests Tracker</b></h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("List", "Repos", new { @filterType = Model.FilterType, @filterValue = Model.FilterValue, @page = Request.QueryString["page"] }))
        {
            <table style=" align-self:center; width:100%">
                <tr>
                    <td width="15%">
                        @Html.DropDownListFor(model => model.FilterType, Model.FilterTypeDropDownItems, "Filter By", new { @class = "form-control" })
                    </td>
                    <td width="1%"></td>
                    <td width="20%">
                        @Html.DropDownListFor(model => model.FilterValue, Model.FilterValueDropDownItems, "Please Select", new { @class = "form-control" })
                    </td>
                    <td width="1%"></td>
                    <td width="10%">
                        <input type="submit" class="btn btn-primary" value="Show" />
                    </td>
                    <td align="right">@Html.ActionLink("Create New", "Create", new { @filterType = Model.FilterType, @filterValue = Model.FilterValue, @page = Request.QueryString["page"] })</td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
            </table>
        }
        <div>
            <table style="font-size:11px;" class="table table-striped table-condensed table-bordered">

                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().RequestNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().BusinessUnit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Account)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Project)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().WorkLocationType)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().RequestedDate)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().OfferOrHoldDate)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Aging)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().AgingBand)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().OverallStatus)
                    </th>
                    <th style="text-align:right">
                        <text>Total</text>
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().JoinedCount)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().OfferedCount)
                    </th>
                    <th style="text-align:right">
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().OpenPosition)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Requests.FirstOrDefault().Priority)
                    </th>
                    <th>Actions</th>
                </tr>

                @if (Model.Requests.Count() == 0)
                {
                    <tr>
                        <td style="text-align:center; background-color:aquamarine;" colspan="16">
                            <text style="font-size:15px">
                                No Records to Display
                            </text>
                        </td>
                    </tr>
                }

                @foreach (var item in Model.Requests)
                {
                    <tr>
                        <td>
                            @Html.ActionLink($"{item.RequestNo}", "Edit", new { @id = item.RecruitmentRequestID, @filterType = Request.QueryString["filterType"], @filterValue = Request.QueryString["filterValue"], @page = Request.QueryString["page"] })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BusinessUnit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Account)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Project)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.WorkLocationType)
                        </td>
                        <td class="text-right">
                            <text>@item.RequestedDate.ToString("dd/MMM/yyy")</text>
                        </td>
                        <td style="text-align:right">
                            @if (item.OfferOrHoldDate.HasValue)
                            {
                                Html.DisplayText(item.OfferOrHoldDate.Value.ToString("dd/MMM/yyyy"));
                            }
                            else
                            {
                                Html.DisplayText(" ");

                            }
                        </td>
                        <td style="text-align:right">
                            @Html.DisplayFor(modelItem => item.Aging)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AgingBand)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OverallStatus)
                        </td>
                        <td style="text-align:right">
                            @Html.DisplayFor(modelItem => item.TotalPosition)
                        </td>
                        <td style="text-align:right">
                            @Html.DisplayFor(modelItem => item.JoinedCount)
                        </td>
                        <td style="text-align:right">
                            @Html.DisplayFor(modelItem => item.OfferedCount)
                        </td>
                        <td style="text-align:right">
                            @{
                                int openPos = item.TotalPosition - item.JoinedCount - item.OfferedCount;
                                <text>@openPos.ToString()</text>
                            }

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Priority)
                        </td>
                        <td>
                            @Html.ActionLink("Update Status", "UpdateStatus", new { @id = item.RecruitmentRequestID }) |
                            @Html.ActionLink("Delete", "Delete", new { @id = item.RecruitmentRequestID })
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>