@model Agilisium.TalentManager.WebUI.Models.EmployeeModel

@{
    ViewBag.Title = "Update Employee Details";
}
<link href="~/Content/error-styles.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        //generateEmployeeIDForEmpPage();

        $("#DateOfJoin").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });

        $("#LastWorkingDay").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });

        $("#VisaValidUpto").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });

        $("#PassportValidUpto").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
    });

    $(function () {
        $("#BusinessUnitID").change(function (event) {
            if ($("#BusinessUnitID").val() == 3) {
                loadAccountsDropDownListForEmpPage();
                GetBillableTypeListForEmpPage();
            }
            else {
                loadBuLevelDropDownListForEmpPage();
            }

        });
    });

    $(function () {
        $("#Level1ID").change(function (evt) {
            if ($("#Level1ID").val() > 0) {
                var levelName = $("#Level1ID option:selected").html().toLowerCase();
                if ($("#BusinessUnitID").val() == 1) {
                    loadResourceLevelDropDownListForEmpPage();
                }

                if ($("#BusinessUnitID").val() == 2) {
                    if (levelName == 'admin') {
                        GetBOLevel2ListForInEmpPageWithAdmin();
                    }
                    else if (levelName == 'finance') {
                        GetBOLevel2ListForInEmpPageWithFinance();
                    }
                    else {
                        loadBuLevelDropDownListForEmpPageFromLevel2();
                        $("#Level2ID").val($("#Level1ID").val());
                        $("#Level3ID").val($("#Level1ID").val());
                        $("#Level4ID").val($("#Level1ID").val());
                        $("#Level5ID").val($("#Level1ID").val());
                    }
                }

                if ($("#BusinessUnitID").val() == 3) {
                    loadProjectsDropDownListForEmpPage();
                }

                if (levelName == 'growth bench') {
                    loadLevel2ListOnRmgGrowthBenchForEmpPage();
                }
            }
        });
    });

    $(function () {
        $("#Level2ID").change(function (evt) {
            if ($("#BusinessUnitID").val() == 1 || $("#BusinessUnitID").val() == 2) {
                $("#Level3ID").val($("#Level2ID").val());
                $("#Level4ID").val($("#Level2ID").val());
                $("#Level5ID").val($("#Level2ID").val());
            }

            var level1Name = $("#Level1ID option:selected").html().toLowerCase();
            if (level1Name == 'growth bench') {
                var levelName = $("#Level2ID option:selected").html().toLowerCase();
                if (levelName == "earmarked") {
                    loadAccountsListForEmpPageWithRmgEarked();
                    GetLevel5ListForEmpPageWithRmGEarmarked();
                }
                else {
                    loadLevel3ListOnRmgGrowthBenchForEmpPage();
                }
            }
        });
    });

    $(function () {
        $("#Level3ID").change(function (evt) {
            var levelName = $("#Level3ID option:selected").html().toLowerCase();

            if ($("#BusinessUnitID").val() == 3) {
                if (levelName == "non-billable") {
                    GetLevel4NonBillableListForEmpPage();
                    GetLevel5NonBillableListForEmpPage();
                }
                else {
                    GetBillableTypeListForLevel45InEmpPage();
                    GetBillableTypeListForLevel5InEmpPage();
                    $("#Level4ID").val($("#Level3ID").val());
                }
            }

            var level1Name = $("#Level1ID option:selected").html().toLowerCase();
            if (level1Name == 'growth bench') {
                var levelName = $("#Level2ID option:selected").html().toLowerCase();
                if (levelName == "earmarked") {
                    loadProjectsDropDownListForEmpPageWithRmgEarmarked();
                }
                else {
                    $("#Level4ID").val($("#Level3ID").val());
                    $("#Level5ID").val($("#Level3ID").val());
                }
            }
        });
    });

    $(function () {
        $("#EmploymentTypeID").change(function (event) {
            generateEmployeeIDForEmpPage();
        });
    });

    $(function () {
        $("#EmployeeID").change(function (event) {
            if ($("#EmployeeID").val().length > 0) {
                $("#empID").val($("#EmployeeID").val())
            }
        })
    })
</script>

<div class="panel panel-default">
    <div style="text-align:center" class="panel-heading">
        <h3><b>Update Employee Details</b></h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="panel-body">
            @Html.ValidationSummary(false, "Please correct the below Validation Errors to save the data")
            <div>
                <table style="width:96%;" cellpadding="5" cellspacing="5px">
                    <tr>
                        <td width="15%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmploymentTypeID)
                                @Html.DropDownListFor(model => model.EmploymentTypeID, (IEnumerable<SelectListItem>)ViewBag.EmploymentTypeListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td width="15%">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.EmployeeID, new { id = "empID" })
                                @Html.LabelFor(model => model.EmployeeID)
                                @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td width="15%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName)
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td width="15%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName)
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td width="15%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsManager)
                                @Html.EditorFor(model => model.IsManager, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfJoin)
                                @Html.EditorFor(model => model.DateOfJoin, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmailID)
                                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessUnitID)
                                @Html.DropDownListFor(model => model.BusinessUnitID, (IEnumerable<SelectListItem>)ViewBag.BuListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ReportingManagerID)
                                @Html.DropDownListFor(model => model.ReportingManagerID, (IEnumerable<SelectListItem>)ViewBag.ReportingManagerListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PrimarySkills)
                                @Html.EditorFor(model => model.PrimarySkills, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PastExperience)
                                @Html.EditorFor(model => model.PastExperience, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TechnicalRank)
                                @Html.DropDownListFor(model => model.TechnicalRank, (IEnumerable<SelectListItem>)ViewBag.GradeListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PassportNo)
                                @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PassportValidUpto)
                                @Html.EditorFor(model => model.PassportValidUpto, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>

                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VisaCategoryID)
                                @Html.DropDownListFor(model => model.VisaCategoryID, (IEnumerable<SelectListItem>)ViewBag.VisaCategoryListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.VisaValidUpto)
                                @Html.EditorFor(model => model.VisaValidUpto, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IsTechResource)
                                @Html.EditorFor(model => model.IsTechResource, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastWorkingDay)
                                @Html.EditorFor(model => model.LastWorkingDay, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Level1ID, new { @id = "Level1ID_Lable" })
                                @Html.DropDownListFor(model => model.Level1ID, (IEnumerable<SelectListItem>)ViewBag.Level1ListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Level2ID, new { @id = "Level2ID_Lable" })
                                @Html.DropDownListFor(model => model.Level2ID, (IEnumerable<SelectListItem>)ViewBag.Level2ListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="2%"></td>

                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Level3ID, new { @id = "Level3ID_Lable" })
                                @Html.DropDownListFor(model => model.Level3ID, (IEnumerable<SelectListItem>)ViewBag.Level3ListItems, "Please Select", new { @class = "form-control", })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Level4ID, new { @id = "Level4ID_Lable" })
                                @Html.DropDownListFor(model => model.Level4ID, (IEnumerable<SelectListItem>)ViewBag.Level4ListItems, "Please Select", new { @class = "form-control", })
                            </div>
                        </td>
                        <td width="2%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Level5ID, new { @id = "Level5ID_Lable" })
                                @Html.DropDownListFor(model => model.Level5ID, (IEnumerable<SelectListItem>)ViewBag.Level5ListItems, "Please Select", new { @class = "form-control", })
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="panel-footer">
                @Html.HiddenFor(model => model.EmployeeEntryID)
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel and Go Back", "List", null, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>

