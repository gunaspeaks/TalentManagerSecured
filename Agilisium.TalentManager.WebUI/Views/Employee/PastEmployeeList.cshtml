@using Agilisium.TalentManager.WebUI.Helpers

@model Agilisium.TalentManager.WebUI.Models.EmployeeViewModel

@{
    ViewBag.Title = "Past Employees";
}

<div class="panel panel-default">
    <div style="text-align:center" class="panel-heading">
        <h3><b>Employees Who Resigned</b></h3>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-condensed table-bordered">
            <tr>
                <th class="text-left">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().EmployeeID)
                </th>
                <th class="text-left">
                    @Html.DisplayName("Employee Name")
                </th>
                <th class="text-left">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().BusinessUnitName)
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().DateOfJoin)
                </th>
                <th class="text-left">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().PrimarySkills)
                </th>
                <th class="text-left">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().PastExperience)
                </th>
                <th class="text-left">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().OverallExperience)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().IsTechResource)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Employees.FirstOrDefault().Certifications)
                </th>
            </tr>

            @foreach (var item in Model.Employees)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeID)
            </td>
            <td>
                @if (User.IsInRole("Super Admin") || User.IsInRole("Human Resource") || User.IsInRole("Admin"))
                {
                    @Html.ActionLink($"{item.FirstName} {item.LastName}", "Edit", new { id = item.EmployeeEntryID, page = Request.QueryString["page"] });
                }
                else
                {
                    <label>@item.FirstName &nbsp; @item.LastName </label>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BusinessUnitName)
            </td>
            <td class="text-right">
                <text>@item.DateOfJoin.ToString("dd/MMM/yyyy")</text>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrimarySkills)
            </td>
            <td class="text-left">

                @if (item.PastExperience.HasValue)
                {
                    <text>@String.Format("{0:0.0} years", item.PastExperience.Value)</text>
                }
                else
                {
                    <text>Not Available</text>
                }
            </td>
            <td class="text-left">
                @if (!String.IsNullOrWhiteSpace(item.OverallExperience))
                {
                    string str = $"{item.OverallExperience} years";
                    <text>@str</text>
                }
                else
                {
                    <text>Not Available</text>
                }
            </td>
            <td class="text-center">
                @if (item.IsTechResource.HasValue && item.IsTechResource.Value)
                {
                    <text>Yes</text>
                }
                else
                {
                    <text>No</text>
                }
            </td>
            <td class="text-center">
                @Html.ActionLink(item.Certifications.ToString(), "Certifications", new { eid = item.EmployeeEntryID, page = Request.QueryString["page"] })
            </td>
        </tr>
            }
        </table>
        <div class="btn-group pull-left">
            @Html.ActionLink("Back to Active Employees List", "List", "Employee", null, new { @class = "btn btn-primary" })
        </div>
        <div class="btn-group pull-right">
            @Html.AddPagination(Model.PagingInfo, x => Url.Action("PastEmployeeList", new { page = x }))
        </div>
    </div>
</div>