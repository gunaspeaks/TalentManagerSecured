@model IEnumerable<Agilisium.TalentManager.WebUI.Models.CustomAllocationModel>
<hr />
<div style="text-align:center" class="panel-heading">
    <h3><b>Current Allocations for the Selected Employee</b></h3>
</div>
@if (Model.Count() == 0)
{
    <div class="panel-body">
        <h4>No records found.</h4>
    </div>
}
else
{
    <div class="panel-body">
        <table style="width:95%" border="1" class="table">
            <tr>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ProjectName)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ProjectCode)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.BusinessUnit)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Practice)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.SubPractice)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ProjectManager)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.DeliveryManager)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.AllocatedPercentage)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.UtilizatinType)
                </th>

            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BusinessUnit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Practice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubPractice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectManager)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryManager)
                    </td>
                    <td class="text-right">
                        <text>@item.StartDate.ToString("dd/MMM/yyy")</text>
                    </td>
                    <td class="text-right">
                        @if (@item.EndDate.HasValue)
                        {
                            <text>@item.EndDate.Value.ToString("dd/MMM/yyy")</text>
                        }
                    </td>
                    <td class="text-right">
                        @Html.DisplayFor(modelItem => item.AllocatedPercentage)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UtilizatinType)
                    </td>
                </tr>
            }
        </table>
    </div>
}