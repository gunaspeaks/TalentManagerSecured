@model Agilisium.TalentManager.WebUI.Models.ProjectModel

@{
    ViewBag.Title = "Edit Project Details";
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<link href="~/Content/error-styles.css" rel="stylesheet" />
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        //loadPracticeDropDownListForProjectPage();
        $("#StartDate").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
        $("#EndDate").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
        $("#SowStartDate").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });

        $("#SowEndDate").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
    })

    $(function () {
        $("#PracticeID").change(function (evt) {

            if ($("#PracticeID").text() != "Please Select") {
                $.ajax({
                    url: rootUrl + "Project/SubPracticeList",
                    type: 'POST',
                    data: { id: $("#PracticeID").val() },
                    success: function (data) {
                        $('#SubPracticeID').empty();
                        $.each(data, function () {
                            $("#SubPracticeID").append($("<option></option>").val(parseInt(this['Value'])).text(this['Text']));
                        });
                        ddlSubPractice.prop('disabled', false);
                    },
                    error: function (xhr) { alert('Error while loading the Sub Practice list'); }
                });
            }
        });
    });

    $(function () {
        $("#BusinessUnitID").change(function (event) {
            if ($("#BusinessUnitID").val() != 3) {
                $("#ProjectTypeID").val(9);
                $("#ProjectTypeID").attr('disabled', 'disabled');
            }
            else {
                $("#ProjectTypeID").removeAttr("disabled");
            }
            loadPracticeDropDownListForProjectPage();
        });
    });

</script>

<div class="panel panel-default">
    <div style="text-align:center" class="panel-heading">
        <h3><b>Edit Project Details</b></h3>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="panel-body">
            @Html.ValidationSummary(false, "Please correct the below Validation Errors to save the data")
            <div>
                <table style="width:80%">
                    <tr>
                        <td width="25%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectName)
                                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td width="25%">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectAccountID)
                                @Html.DropDownListFor(model => model.ProjectAccountID, (IEnumerable<SelectListItem>)ViewBag.AccountsListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.HiddenFor(model => model.ProjectID)
                                @Html.LabelFor(model => model.ProjectCode)
                                @Html.EditorFor(model => model.ProjectCode, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessUnitID)
                                @Html.DropDownListFor(model => model.BusinessUnitID, (IEnumerable<SelectListItem>)ViewBag.BuListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PracticeID)
                                @Html.DropDownListFor(model => model.PracticeID, (IEnumerable<SelectListItem>)ViewBag.PracticeListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectTypeID)
                                @Html.DropDownListFor(model => model.ProjectTypeID, (IEnumerable<SelectListItem>)ViewBag.ProjectTypeListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProjectManagerID)
                                @Html.DropDownListFor(model => model.ProjectManagerID, (IEnumerable<SelectListItem>)ViewBag.ProjectManagerListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DeliveryManagerID)
                                @Html.DropDownListFor(model => model.DeliveryManagerID, (IEnumerable<SelectListItem>)ViewBag.ProjectManagerListItems, "Please Select", new { @class = "form-control" })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td rowspan="2">
                            <div class="form-group">
                                @Html.Label("Remarks")
                                @Html.TextArea("Remarks", null, new { @class = "form-control", rows = 5 })
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.StartDate)
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EndDate)
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.IsSowAvailable, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.LabelFor(model => model.IsSowAvailable)
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SowStartDate)
                                @Html.EditorFor(model => model.SowStartDate, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                        <td width="5%"></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SowEndDate)
                                @Html.EditorFor(model => model.SowEndDate, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="panel-footer">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel and Go Back", "List", new { filterType = Request.QueryString["filterType"], filterValue = Request.QueryString["filterValue"], page = Request.QueryString["page"] }, new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>
