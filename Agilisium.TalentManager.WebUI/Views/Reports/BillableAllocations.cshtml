@model Agilisium.TalentManager.WebUI.Models.UtilizationReportDetailViewModel

@{
    ViewBag.Title = "Billable Allocations for Finance";
}
<link href="~/Content/error-styles.css" rel="stylesheet" />
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="~/Scripts/Agilisium/content-updater.js"></script>

<script>

    $(document).ready(function () {
        var clientProjectID = 9;
        var deliveryBUID = 3;

        $("#From").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
        $("#Upto").datepicker({

            dateFormat: "mm/dd/yy",
            changeMonth: true,
            changeYear: true,
            showAnim: "fadeIn",
        });
    });

</script>

<div class="panel panel-default">
    <div style="text-align:center" class="panel-heading">
        <h3><b>Billable Allocations for Finance</b></h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("BillableAllocations", "Reports", new { from = Model.From, upto = Model.Upto }))
        {
            <table style="align-content:flex-start">
                <tr>
                    <td>
                        @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>&nbsp;</td>
                    <td>
                        @Html.EditorFor(model => model.Upto, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>&nbsp;</td>
                    <td>
                        <input type="submit" class="btn btn-primary" value="Show" />
                    </td>
                    <td>&nbsp;</td>
                    <td>@Model.Allocations.Count records found</td>
                    <td>&nbsp;</td>
                    <td>
                        @Html.ActionLink("(Download as CSV Format)", "DownloadBillableAllocations", new { from = Model.From, upto = Model.Upto })
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                </tr>
            </table>
        }
        <div>
            <table style="width:100%" class="table table-striped table-condensed table-bordered">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().AllocationEntryID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().EmployeeID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().EmployeeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().ProjectName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().POD)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().ProjectManager)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().ReportingManager)
                    </th>
                    <th class="text-right">
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().AllocationStartDate)
                    </th>
                    <th class="text-right">
                        @Html.DisplayNameFor(model => model.Allocations.FirstOrDefault().AllocationEndDate)
                    </th>
                </tr>

                @foreach (var item in Model.Allocations)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AllocationEntryID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.POD)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectManager)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReportingManager)
                    </td>
                    <td class="text-right">
                        @if (item.AllocationStartDate.HasValue)
                        {
                            <text>@item.AllocationStartDate.Value.ToString("dd/MMM/yyyy")</text>
                        }
                        else
                        {
                            <text> &nbsp;</text>
                        }
                    </td>
                    <td class="text-right">
                        @if (item.AllocationEndDate.HasValue)
                        {
                            <text>@item.AllocationEndDate.Value.ToString("dd/MMM/yyyy")</text>
                        }
                        else
                        {
                            <text> &nbsp;</text>
                        }
                    </td>
                </tr>
                }

            </table>
        </div>
    </div>
    <div class="panel-footer">
        @Html.ActionLink("Back to Reports", "Index", null, new { @class = "btn btn-default" })
        @*<div class="btn-group pull-right">
                @Html.AddPagination(Model.PagingInfo, x => Url.Action("UtilizationReportDetail", new { filterType = Model.FilterType, filterValue = Model.FilterValue, page = x }))
            </div>*@
    </div>
</div>
